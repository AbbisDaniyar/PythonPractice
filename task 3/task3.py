"""
Color Game Bot - –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤
https://www.arealme.com/colors/ru/
"""

import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.chrome.options import Options


class ColorGameBot:
    """–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–æ—Ç –¥–ª—è —Ü–≤–µ—Ç–æ–≤–æ–π –∏–≥—Ä—ã"""

    def __init__(self, headless=False):
        self.setup_driver(headless)
        self.score = 0
        self.start_time = 0

    def setup_driver(self, headless):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Chrome –¥—Ä–∞–π–≤–µ—Ä–∞ —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π"""
        chrome_options = Options()
        chrome_options.add_argument("--disable-blink-features=AutomationControlled")
        chrome_options.add_experimental_option("excludeSwitches", ["enable-automation"])
        chrome_options.add_argument("--no-sandbox")
        chrome_options.add_argument("--disable-dev-shm-usage")

        if headless:
            chrome_options.add_argument("--headless")

        self.service = Service(ChromeDriverManager().install())
        self.driver = webdriver.Chrome(service=self.service, options=chrome_options)
        self.driver.set_window_size(1200, 800)

    def start_game(self):
        """–ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –∏–≥—Ä—ã"""
        print("üöÄ –ó–∞–ø—É—Å–∫ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞...")
        self.driver.get("https://www.arealme.com/colors/ru/")
        time.sleep(1.5)

        start_btn = self.driver.find_element(By.ID, "start")
        start_btn.click()
        print("üéÆ –ò–≥—Ä–∞ –Ω–∞—á–∞—Ç–∞!")
        self.start_time = time.time()
        time.sleep(2.0)
        return True

    def get_remaining_time(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Å—Ç–∞–≤—à–µ–≥–æ—Å—è –≤—Ä–µ–º–µ–Ω–∏"""
        elapsed = time.time() - self.start_time
        return max(0, 60 - elapsed)

    def play_round_fast(self):
        """–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞—É–Ω–¥ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º JavaScript"""
        script = """
        var container = document.querySelector('.patra-color');
        if (!container) return false;
        
        var spans = container.querySelectorAll('span');
        var colorMap = {};
        var elements = [];
        
        for (var i = 0; i < spans.length; i++) {
            var span = spans[i];
            var style = window.getComputedStyle(span);
            var bgColor = style.backgroundColor;
            
            if (bgColor && bgColor.startsWith('rgb') && 
                bgColor !== 'rgba(0, 0, 0, 0)' && 
                span.offsetWidth > 0) {
                
                elements.push(span);
                
                if (!colorMap[bgColor]) {
                    colorMap[bgColor] = [];
                }
                colorMap[bgColor].push(span);
            }
        }
        
        // –ù–∞—Ö–æ–¥–∏–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ü–≤–µ—Ç
        for (var color in colorMap) {
            if (colorMap[color].length === 1) {
                colorMap[color][0].click();
                return true;
            }
        }
        
        return false;
        """

        try:
            result = self.driver.execute_script(script)
            if result:
                self.score += 1
                return True
        except:
            pass

        return False

    def run_game(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π –∏–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª —Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º"""
        if not self.start_game():
            return

        print("‚è± –ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –í—Ä–µ–º—è: 60 —Å–µ–∫—É–Ω–¥")
        last_print_time = self.start_time

        # –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª
        while self.get_remaining_time() > 0:
            self.play_round_fast()

            # –í—ã–≤–æ–¥ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
            current_time = time.time()
            if current_time - last_print_time >= 5:
                remaining = self.get_remaining_time()
                speed = self.score / (current_time - self.start_time)
                print(f"‚ö° –°—á–µ—Ç: {self.score} | –°–∫–æ—Ä–æ—Å—Ç—å: {speed:.1f} –∫–ª–∏–∫/—Å–µ–∫ | –û—Å—Ç–∞–ª–æ—Å—å: {remaining:.1f} —Å–µ–∫")
                last_print_time = current_time

        final_time = time.time() - self.start_time
        final_speed = self.score / final_time

        print(f"\nüéØ –§–ò–ù–ê–õ–¨–ù–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢: {self.score} –æ—á–∫–æ–≤")
        print(f"üìä –°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å: {final_speed:.1f} –∫–ª–∏–∫–æ–≤/—Å–µ–∫")

        self.driver.save_screenshot(f"optimized_result_{self.score}.png")

    def close(self):
        """–ó–∞–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞"""
        self.driver.quit()


def main():
    print("=" * 50)
    print("          üéØ –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–´–ô –ë–û–¢")
    print("=" * 50)

    # –ó–∞–ø—É—Å–∫ –≤ headless —Ä–µ–∂–∏–º–µ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    bot = ColorGameBot(headless=True)
    try:
        bot.run_game()

        if bot.score >= 1669:
            print("üéâ –†–ï–ö–û–†–î –ü–†–ï–í–´–®–ï–ù!")
        else:
            print("üí™ –•–æ—Ä–æ—à–∞—è –ø–æ–ø—ã—Ç–∫–∞!")

    finally:
        bot.close()


if __name__ == "__main__":
    main()